== General Requirements ==

A FIWARE GE must fit well in the architecture of a “Powered by FIWARE” solution:

* integrate well with architectures where context management is cornerstone and addressed using FIWARE NGSI (currently FIWARE NGSIv2, next ETSI NGSI-LD). 
* Producing context information, and/or Processing context information.

== Development Lifecycle Requirements ==

* Direct commits or self-commits to the master branch are not allowed. All contributions to master MUST come in the form of a Pull Request.
* Pull Requests MUST include not only code changes but also test changes and documentation changes.
* Pull Requests MUST be public and open during a reasonable period of time so that the community can check it and contribute if necessary
* Pull Requests need to be approved (using the standard Github function or a 'LGTM' comment) by all the reviewers involved, i.e. all people that gave their feedback on it.
* Pull Request approval MUST be issued by a thrid party. Nobody can auto-merge their contributions.
* Before merging an open Pull Request Travis status MUST be green. 


== Publication Requirements ==

* The SCM Tool MUST be [https://github.com Github.com]. 
* Github MUST be used during the <b>whole development lifecycle</b>. See [[development.mediawiki#Development_Lifecycle|Development Lifecycle]] which describes a set of best practices for collaborative open source development.
* See [[GE_Checklist.mediawiki|GE Publication Checklist]] for a list of tasks to be done in order to publish a new GE.

== Documentation Requirements ==

GE's repository README.md file '''MUST''' include:

* the following sentence: 'This project is part of FIWARE'.
* a link to fiware.org.
* a link to https://catalogue.fiware.org.
* the [[project_badges.mediawiki|project badges]] which are stated as mandatory.
* what major.minor release of FIWARE each release of their product is compatible with.

== Ecosystem Support and Quality Requirements ==

The Community behind each GE (owner, other caretakers) '''SHOULD''' commit to bring support to requests submitted through
standard [mailto:fiware-help@lists.fiware.org FIWARE Help Desk channel] and QA testings executed by QA Lab team.

The following assessments will be conducted:

* Assessment on support, to be performed by automated monitoring tools defined by the FIWARE Foundation.
* Assessment on functionality, (sw and documentation), non-functional requirements, etc. to be performed by the QA Lab team.

Results of assessments lead to QA label assignment based on [https://www.fiware.org/wp-content/uploads/2016/10/QA_public_document.pdf FIWARE QA labeling schema].
QA labels of a given FIWARE GE will always be associated to a minor release of FIWARE. In the event of not meeting minimal QA requirements:

* ''Yellow card'' reprimand will be issued when overall QA label is '''B''' or lower.
* ''Red card'' reprimand when overall QA label is '''C''' or lower or keeps being '''B''' in two consecutives minor releases of FIWARE.

== Licensing Requirements ==

When using a copyleft open source license IPR Management rules have to be clearly stated:

* There should be at least one organization which can exercise IPRs on the whole software.
* It is acceptable that such organization is the original contributor (aka “Owner”).
* There shall be a commitment to transfer to FIWARE Foundation the IPRs in case product is not longer supported.
* An explanation document '''must''' visible at first level of README.md, allowing contributions from third parties.
* There '''must''' be a statement ensuring that applications build on top will not get contaminated. Statement currently requested in the FIWARE Catalogue should be ok:

''
Please note that software derived as a result of modifying the source code of the 
'name-of-product' product software in order to fix a bug or incorporate enhancements is
considered a derivative work of the product. Software that merely uses or aggregates (i.e. links to)
an otherwise unmodified version of existing software is not considered a derivative work.
''

== Releases ==

Rules for numbering FIWARE releases:

* Major release number: to be increased by decision at TSC level, typically linked with a major achievement (e.g., support to NGSI-LD)
* Minor release number: to be incremented with relevant milestones agreed at TSC level. Milestones will be FIWARE Summits by default. Additional ones can be added if strictly needed and agreed at TSC level

Major.minor numbering of FIWARE GEs in the Core Context Management chapter matches numbering of FIWARE release, i.e., they automatically increment as FIWARE releases evolve.

GE owners '''SHOULD''':

* Create a tag ''<product release number>_FIWARE<major>.<minor>'' to be attached to the corresponding docker images, where ''FIWARE<major>.<minor>'' is the release of FIWARE that docker image is compatible with (there can be several tags like that)
* Notify the FIWARE Foundation whenever a new release of the FIWARE GE has been released.
* "compatibility" with a release means compatibility with Core FIWARE GEs in that release: the FIWARE GE owner commits to do the relevant testing.

== Roadmap ==

Representatives of the GE community '''MUST''' attend F2F roadmap meetings to take place at FIWARE Summits
(not overlapping with agenda, day or day and a half before the Summit)

Proposed approach for roadmap: just web page on FIWARE website describing what work is planned as a result of FIWARE Roadmap meetings.

